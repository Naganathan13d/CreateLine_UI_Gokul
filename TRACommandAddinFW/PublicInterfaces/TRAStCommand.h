// COPYRIGHT Dassault Systemes 2022
//===================================================================
//
// TRAStCommand.h
// The state chart based command: TRAStCommand
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Jun 2022  Creation: Code generated by the CAA wizard  Dell
//===================================================================
#ifndef TRAStCommand_H
#define TRAStCommand_H

#include "TRACommandAddinMod.h"
#include "CATStateCommand.h"
#include "CATBoolean.h"

#include "TRACommandDlg.h"
#include "CATPathElementAgent.h"
#include "CATIPrtContainer.h"
#include "CATDialogAgent.h"
#include "CATIGSMPoint.h"
#include "CATHSO.h"
#include "CATISO.h"
#include "CATPathElement.h"








class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class ExportedByTRACommandAddinMod TRAStCommand: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TRAStCommand, CATStateCommand )

  public:

  TRAStCommand();
  virtual ~TRAStCommand();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

  private:

  
  TRACommandDlg * _pWindow ;

  CATHSO * _HSO;
  CATISO * _pISO;

  CATPathElement* _pathElementPoint;

  CATFrmEditor* _pEditor;

  CATPathElementAgent * _pPointAgent;
  /*CATPathElementAgent * pSecondPointAgent;
  CATPathElementAgent * pThirdPointAgent;*/

      CATDialogAgent * pOKAgent;
	  CATDialogAgent * pCancelAgent;

	  CATDialogAgent * pPoint1SectorListAgent;
      CATDialogAgent * pPoint2SectorListAgent;
	  CATDialogAgent * pPoint3SectorListAgent;

	  CATDialogAgent * _pDlgAgentCtxtMenu;

	  CATIGSMPoint_var spFirstPoint;
      CATIGSMPoint_var spSecondPoint;
	  CATIGSMPoint_var spThirdPoint;

	   CATIPrtContainer_var spPrtContainer;

	  virtual CATBoolean SelectFirstPoint();
      virtual CATBoolean SelectSecondPoint();
	  virtual CATBoolean SelectThirdPoint();

	  CATBoolean FirstPointEditorIsSelected();
      CATBoolean SecondPointEditorIsSelected();
	  CATBoolean ThirdPointEditorIsSelected();

	  CATBoolean OnSelectorList1Selected(void *);
	  CATBoolean OnSelectorList2Selected(void *);
	  CATBoolean OnSelectorList3Selected(void *);

	  CATBoolean OnCtxMenuClear();

	  CATBoolean OnCtxMenuClearSelection();

	  CATBoolean OK();

      CATBoolean Cancel();

      void GetEditor();

	  void CreateLine();

      void InsertInProceduralView(CATISpecObject_var &ispSpecObject);

	  CATBoolean Exit();

};

//----------------------------------------------------------------------

#endif
